import * as React from 'react';
import Box from '@mui/material/Box';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';
import Modal from '@mui/material/Modal';
import { Form } from 'reactstrap';
import { FormLabel, TextField } from '@mui/material';
import add_country from '../assets/css/add_country.css';
import CountryData from '../CountryData/CountryData.js';
import {useState} from 'react';
import {nanoid} from 'nanoid';
import { useFormik } from 'formik';
import * as Yup from "yup";
import { v4 as uuidv4 } from 'uuid';

const style = {
  position: 'absolute',
  top: '50%',
  left: '50%',
  transform: 'translate(-50%, -50%)',
  width: 500,
  height: 400,
  bgcolor: 'background.paper',
  border: '2px solid #000',
  boxShadow: 24,
  p: 4,
};

const Add = () => {
  const [open, setOpen] = React.useState(false);
  const handleOpen = () => setOpen(true);
  const handleClose = () => setOpen(false);

  const [countries, setContries] = useState(CountryData);

  const[name, setNameCountry] = useState("");
  const[code, setCodeCountry] = useState("");
  const[description, setDesCountry] = useState("");

  // console.log(nameCountry);
  // console.log(codeCountry);
  // console.log(desCountry);

  //xác định trạng thái ban đầu
  const formik = useFormik({
    initialValues:{
        name:"",
        code: "",
        description : "" 
    },
//yup
    // validationSchema: Yup.object({
    //     nameCountry: Yup.string()
    //       .max(20, "Must be 20 characters or less")
    //       .require("Required"),

    //       codeCountry: Yup.string()
    //       .max(20, "Must be 20 characters or less")
    //       .require("Required"),

    //       desCountry: Yup.string()
    //       .max(20, "Must be 20 characters or less")
    //       .require("Required"),
    // }),

    onSubmit: (values) => {
     // setCountries(values.nameCountry, values.codeCountry, values.desCountry);
    //    console.log(values);
    //  console.log(setCountries);
      //  setContries([...countries, values])
      // console.log(setContries);

      setContries((prevCountries) => ({
        ...prevCountries,
        id: uuidv4(),
        name: values.name,
        code: values.code,
        description: values.description
      }));
      console.log(setContries);
    },

  });


  return (
    <div>
      <Button onClick={handleOpen} variant="contained"
          sx={{ color: 'white', backgroundColor: 'green', borderColor: 'green',
           marginTop: '30px', marginLeft: '20px' }}
      >Add new country</Button>
      <Modal
        open={open}
        onClose={handleClose}
        aria-labelledby="modal-modal-title"
        aria-describedby="modal-modal-description"
      >
        <Box sx={style}>
        <h1 style={{textAlign: 'center'}}>Add new country</h1>
        <br />
        <div className="formedit" onSubmit={''}>
           <form onSubmit={formik.handleSubmit} >

                  <TextField 
                      id = "name"
                      name = "name"
                      label="Name" 
                      variant="outlined"
                      // onChange={(e)=>setNameCountry(e.target.value)}
                      onChange={formik.handleChange}
                      value = {formik.values.name}
                      // value = {nameCountry}
                  /> 
                {formik.errors.nameCountry ? <p>{formik.errors.name}</p> : null};

                  <TextField 
                      id = "code"
                      name = 'code'
                      label="Code" 
                      variant="outlined"
                      onChange={formik.handleChange}
                      value = {formik.values.code}
                    
                  /> 


                  <TextField 
                      id = "description"
                      name="description" 
                      label="Description" 
                      variant="outlined" 
                      onChange={formik.handleChange}
                      value = {formik.values.description}
                      // onChange={onChangeNewDes}
                      // value={NewDes}
                      // value={formData.description}
                  />
          <br />
            <Button variant="contained" type="submit" >Submit</Button>
        <Button variant="contained" style={{marginLeft: '10px'}} onClick={handleClose}>Cancel</Button>
           </form>
        
        </div>
        </Box>
      </Modal>
    </div>
  );
}
export default Add;

//
setContries((prevCountries) => ({
  ...prevCountries,
  id: uuidv4(),
  name: values.name,
  code: values.code,
  description: values.description
}));
console.log(setContries);
}


//
onSubmit: (values) => {
  // setCountries(values.nameCountry, values.codeCountry, values.desCountry);
//        console.log(values);
 //  console.log(setCountries);
   //  setContries([...countries, values])
   // console.log(setContries);

 //   setContries([...countries,
 //      {id: uuidv4(),
 //       name: values.name,
 //       code: values.code,
 //       description: values.description,
 //     }]);
 // console.log(countries);
 console.log(values.name);
 console.log(values.code);
 console.log(values.description);

 console.log(typeof setContries);

}